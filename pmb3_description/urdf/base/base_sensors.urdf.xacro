<?xml version="1.0"?>
<!-- 
  Copyright (c) 2023 PAL Robotics S.L. All rights reserved.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:include filename="$(find pmb3_description)/urdf/base/base.urdf.xacro"/>

  <xacro:include filename="$(find pmb2_description)/urdf/sensors/sick_tim561_laser.urdf.xacro"/>
  <xacro:include filename="$(find pmb2_description)/urdf/sensors/sick_tim571_laser.urdf.xacro"/>
  <xacro:include filename="$(find pmb3_description)/urdf/sensors/sick_nanoscan3_laser.urdf.xacro"/>
  <xacro:include filename="$(find pmb3_description)/urdf/sensors/ydlidar_tg30_laser.urdf.xacro"/>
  <xacro:include filename="$(find pmb3_description)/urdf/sensors/ydlidar_tg15_laser.urdf.xacro"/>
  <!--@TODO: https://gitlab/ros-overlays/realsense-->
  <!-- <xacro:include filename="$(find realsense2_description)/urdf/_d435.urdf.xacro" /> -->

  <xacro:include filename="$(find pmb3_description)/urdf/deg_to_rad.xacro"/>

  <!-- Laser characteristics -->
  <xacro:property name="base_laser_x" value="0.25600233047086"/>
  <xacro:property name="base_laser_y" value="0.0"/>
  <xacro:property name="base_laser_z" value="0.0823786704606883"/>

  <!-- RGBD cameras characteristics -->
  <xacro:property name="default_calibration_path" value="$(find pmb3_description)"/>
  <xacro:property name="calibration_path" value="$(optenv pmb3_description_calibration_path ${default_calibration_path})"/>
  <xacro:include filename="${calibration_path}/urdf/base/base_pmb3_calib.urdf.xacro"/>
  <xacro:property name="base_rgbd_x" value="0.260434779504343"/>
  <xacro:property name="base_rgbd_y" value="-0.112224592786096"/>
  <xacro:property name="base_rgbd_Y" value="3.738"/>
  <xacro:property name="roof_rgbd_x" value="0.249110911156978"/>
  <xacro:property name="roof_rgbd_y" value="0.117678395770306"/>
  <xacro:property name="roof_rgbd_Y" value="-10.0"/>

  <!-- Laser model can be: false, sick-561, sick-571, sick-nanoscan-3, ydlidar-tg30 -->
  <!-- Camera model can be: false, realsense-d435 -->
  <xacro:macro name="base_sensors" params=" name laser_model:=ydlidar-tg30 camera_model:=realsense-d435">

    <xacro:if value="${laser_model == 'sick-561'}">
      <!-- Laser -->
      <!-- Theoretic FOV = 220 -->
      <xacro:sick_tim561_laser name="${name}_laser" parent="${name}" ros_topic="scan_raw" update_rate="10" min_angle="${-110 * deg_to_rad}" max_angle="${110 * deg_to_rad}" >
        <origin xyz="${base_laser_x} ${base_laser_y} ${base_laser_z}" rpy="0 0 0" />
      </xacro:sick_tim561_laser>
    </xacro:if>

    <xacro:if value="${laser_model == 'sick-571'}">
      <!-- Laser -->
      <!-- Theoretic FOV = 220 -->
      <xacro:sick_tim571_laser name="${name}_laser" parent="${name}" ros_topic="scan_raw" update_rate="10" min_angle="${-110 * deg_to_rad}" max_angle="${110 * deg_to_rad}" >
        <origin xyz="${base_laser_x} ${base_laser_y} ${base_laser_z}" rpy="0 0 0" />
      </xacro:sick_tim571_laser>
    </xacro:if>

    <xacro:if value="${laser_model == 'sick-nanoscan-3'}">
      <!-- Laser -->
      <!-- Theoretic FOV = 275 (using 240) -->
      <xacro:sick_nanoscan3_laser name="${name}_laser" parent="${name}" ros_topic="scan_raw" update_rate="15" min_angle="${-120 * deg_to_rad}" max_angle="${120 * deg_to_rad}" >
        <origin xyz="${base_laser_x} ${base_laser_y} ${base_laser_z}" rpy="0 0 0" />
      </xacro:sick_nanoscan3_laser>
    </xacro:if>

    <xacro:if value="${laser_model == 'ydlidar-tg30'}">
      <!-- Laser -->
      <!-- Theoretic FOV = 360 (using 240) -->
      <xacro:ydlidar_tg30_laser name="${name}_laser" parent="${name}" ros_topic="scan_raw" update_rate="10" min_angle="${-120 * deg_to_rad}" max_angle="${120 * deg_to_rad}" >
        <origin xyz="${base_laser_x} ${base_laser_y} ${base_laser_z}" rpy="0 0 0" />
      </xacro:ydlidar_tg30_laser>
    </xacro:if>

    <xacro:if value="${laser_model == 'ydlidar-tg15'}">
      <!-- Laser -->
      <!-- Theoretic FOV = 360 (using 240) -->
      <xacro:ydlidar_tg15_laser name="${name}_laser" parent="${name}" ros_topic="scan_raw" update_rate="10" min_angle="${-120 * deg_to_rad}" max_angle="${120 * deg_to_rad}" >
        <origin xyz="${base_laser_x} ${base_laser_y} ${base_laser_z}" rpy="0 0 0" />
      </xacro:ydlidar_tg15_laser>
    </xacro:if>

    <!-- RGBD camera -->
    <!--@TODO: https://gitlab/ros-overlays/realsense-->
    <!-- <xacro:if value="${camera_model == 'realsense-d435'}">
      <xacro:sensor_d435 name="roof_rgbd_camera" parent="${name}_link" topics_ns="roof_rgbd_camera" use_nominal_extrinsics="${use_nominal_extrinsics}">
        <origin xyz="${roof_rgbd_x} ${roof_rgbd_y} ${roof_rgbd_z}" rpy="${roof_rgbd_R * deg_to_rad} ${roof_rgbd_P * deg_to_rad} ${roof_rgbd_Y * deg_to_rad}"/>
      </xacro:sensor_d435>
      
      <xacro:sensor_d435 name="base_rgbd_camera" parent="${name}_link" topics_ns="base_rgbd_camera" use_nominal_extrinsics="${use_nominal_extrinsics}">
        <origin xyz="${base_rgbd_x} ${base_rgbd_y} ${base_rgbd_z}" rpy="${base_rgbd_R * deg_to_rad} ${base_rgbd_P * deg_to_rad} ${base_rgbd_Y * deg_to_rad}"/>
      </xacro:sensor_d435>
    </xacro:if> -->
    
    <xacro:base name="${name}"/>
  </xacro:macro>

</robot>
